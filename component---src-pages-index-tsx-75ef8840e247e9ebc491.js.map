{"version":3,"sources":["webpack:///./src/components/post-card-minimal/post-card-minimal.style.tsx","webpack:///./src/components/post-card-minimal/post-card-minimal.tsx","webpack:///./src/containers/home/style.tsx","webpack:///./src/containers/home/posts/index.tsx","webpack:///./src/components/featured-card/featured-card.style.tsx","webpack:///./src/components/featured-card/featured-card.tsx","webpack:///./src/containers/home/featured-post/style.tsx","webpack:///./src/containers/home/featured-post/index.tsx","webpack:///./src/containers/manifesto/style.tsx","webpack:///./src/containers/manifesto/index.tsx","webpack:///./src/containers/home/index.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/pagination/pagination.tsx","webpack:///./src/components/pagination/pagination.style.tsx","webpack:///./content/collection/knowledge.tsx"],"names":["PostCardWrapper","styled","div","PostPreview","PostDetails","PostDate","themeGet","PostContent","PostTitle","h2","Excerpt","p","PostTags","PostDateAndPreview","ReadMore","PostCardMinimal","image","title","description","url","date","tags","className","imageType","props","addAllClasses","push","join","dangerouslySetInnerHTML","__html","to","fluid","alt","fixed","map","tag","index","key","defaultProps","PersonalBlogWrapper","Posts","Data","useStaticQuery","posts","allMarkdownRemark","edges","TotalPage","allSitePage","nodes","context","numPages","CurrentPage","currentPage","node","frontmatter","fields","slug","featuredImg","childImageSharp","excerpt","nextLink","totalPage","FeaturedCardWrapper","PostMeta","FeaturedCard","collection","overlay","addClass","FeaturedPostWrapper","FeaturedPostRow","FeaturedPostCol","SecTitle","FeaturedPosts","Collections","code","collectionInfo","collectionKnowledge","preview","shortDescription","el","IntroTitle","h1","Description","ButtonToUrl","ManifestoWrapper","ManifestoDetails","Manifesto","manifestoURL","site","siteMetadata","href","target","PersonalBlog","IndexPage","data","Pagination","prevLink","aria-label","PaginationWrapper","PrevPage","NextPage","PageNumber","SSAN1","SESP1","SDSP1"],"mappings":"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","file":"component---src-pages-index-tsx-75ef8840e247e9ebc491.js","sourcesContent":["import styled from 'styled-components';\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const PostCardWrapper = styled.div`\r\n  position: relative;\r\n  &:hover {\r\n    .post_preview {\r\n      transform: translateY(0);\r\n    }\r\n    .post_date {\r\n      transform: translateY(100%);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PostPreview = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  transform: translateY(-100%);\r\n  transition: 0.35s ease-in-out;\r\n  img {\r\n    border-radius: 3px;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    transform: translateY(0);\r\n  }\r\n  @media (max-width: 575px) {\r\n    margin-bottom: 30px;\r\n    width: auto;\r\n    height: auto;\r\n    position: relative;\r\n    transform: translateY(0);\r\n  }\r\n`;\r\n\r\nexport const PostDetails = styled.div`\r\n  display: flex;\r\n  @media (max-width: 575px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const PostDate = styled.div`\r\n  font-size: 90px;\r\n  font-weight: 700;\r\n  text-align: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  line-height: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: ${themeGet('colors.postDate')};\r\n  transition: 0.35s ease-in-out;\r\n  a {\r\n    color: ${themeGet('colors.postDate')};\r\n  }\r\n  @media (max-width: 1200px) {\r\n    font-size: 70px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    font-size: 56px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    display: none;\r\n  }\r\n\r\n  > span {\r\n    font-size: 13px;\r\n    font-weight: 400;\r\n    display: block;\r\n    margin-top: 12px;\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nexport const PostContent = styled.div`\r\n  align-self: center;\r\n`;\r\n\r\nexport const PostTitle = styled.h2`\r\n  font-size: 21px;\r\n  font-weight: 700;\r\n  color: ${themeGet('colors.postTitle')};\r\n  line-height: 1.53;\r\n  margin-bottom: 10px;\r\n  font-family: 'Fira Sans', sans-serif;\r\n  a {\r\n    color: ${themeGet('colors.postTitle')};\r\n  }\r\n  @media (max-width: 1200px) {\r\n    font-size: 21px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    font-size: 19px;\r\n    margin-bottom: 12px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    font-size: 17px;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const Excerpt = styled.p`\r\n  font-size: ${themeGet('fontSizes.3')}px;\r\n  color: ${themeGet('colors.bodyText')};\r\n  font-weight: 400;\r\n  line-height: 2;\r\n  margin-bottom: 0;\r\n  @media (max-width: 990px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const PostTags = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n\r\n  a {\r\n    display: block;\r\n    margin-right: 30px;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: ${themeGet('colors.primaryLinks')};\r\n    transition: 0.15s ease-in-out;\r\n    &:hover {\r\n      color: ${themeGet('colors.primaryLinksHover')};\r\n    }\r\n    @media (max-width: 990px) {\r\n      font-size: 13px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PostDateAndPreview = styled.div`\r\n  position: relative;\r\n  margin-right: 45px;\r\n  flex-shrink: 0;\r\n  overflow: hidden;\r\n  height: 170px;\r\n  width: 170px;\r\n  @media (max-width: 1200px) {\r\n    margin-right: 35px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    margin-right: 25px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    height: auto;\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nexport const ReadMore = styled.div`\r\n  margin-top: 16px;\r\n  a {\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    color: ${themeGet('colors.secondaryLinks')};\r\n    transition: 0.15s ease-in-out;\r\n    &:hover {\r\n      color: ${themeGet('colors.secondaryLinksHover')};\r\n    }\r\n  }\r\n`;\r\n","import * as React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport _ from 'lodash';\r\nimport Img from 'gatsby-image';\r\nimport {\r\n  PostCardWrapper,\r\n  PostPreview,\r\n  PostDetails,\r\n  PostDate,\r\n  PostTitle,\r\n  Excerpt,\r\n  PostContent,\r\n  PostTags,\r\n  PostDateAndPreview,\r\n  ReadMore,\r\n} from './post-card-minimal.style';\r\n\r\ninterface PostCardMinimalProps {\r\n  image?: any;\r\n  title: string;\r\n  description?: string;\r\n  url: string;\r\n  date?: string;\r\n  tags?: [];\r\n  className?: string;\r\n  imageType?: 'fixed' | 'fluid';\r\n}\r\n\r\nconst PostCardMinimal: React.FunctionComponent<PostCardMinimalProps> = ({\r\n  image,\r\n  title,\r\n  description,\r\n  url,\r\n  date,\r\n  tags,\r\n  className,\r\n  imageType,\r\n  ...props\r\n}) => {\r\n  // Add all classs to an array\r\n  const addAllClasses = ['post_card'];\r\n\r\n  // className prop checking\r\n  if (className) {\r\n    addAllClasses.push(className);\r\n  }\r\n\r\n  return (\r\n    <PostCardWrapper className={addAllClasses.join(' ')} {...props}>\r\n      <PostDetails className=\"post_details\">\r\n        <PostDateAndPreview>\r\n          {date && (\r\n            <PostDate\r\n              dangerouslySetInnerHTML={{\r\n                __html: date,\r\n              }}\r\n              className=\"post_date\"\r\n            />\r\n          )}\r\n          {image == null ? null : (\r\n            <PostPreview className=\"post_preview\">\r\n              <Link to={url}>\r\n                {imageType === 'fluid' ? (\r\n                  <Img fluid={image} alt=\"post preview\" />\r\n                ) : (\r\n                  <Img fixed={image} alt=\"post preview\" />\r\n                )}\r\n              </Link>\r\n            </PostPreview>\r\n          )}\r\n        </PostDateAndPreview>\r\n\r\n        <PostContent className=\"post_content\">\r\n          {tags == null ? null : (\r\n            <PostTags className=\"post_tags\">\r\n              {tags.map((tag: string, index: number) => (\r\n                <Link key={index} to={`/tags/${_.kebabCase(tag)}/`}>\r\n                  {`#${tag}`}\r\n                </Link>\r\n              ))}\r\n            </PostTags>\r\n          )}\r\n          <PostTitle className=\"post_title\">\r\n            <Link to={url}>{title}</Link>\r\n          </PostTitle>\r\n          {description && (\r\n            <Excerpt\r\n              dangerouslySetInnerHTML={{\r\n                __html: description,\r\n              }}\r\n              className=\"excerpt\"\r\n            />\r\n          )}\r\n          <ReadMore>\r\n            <Link to={url}>Read More</Link>\r\n          </ReadMore>\r\n        </PostContent>\r\n      </PostDetails>\r\n    </PostCardWrapper>\r\n  );\r\n};\r\n\r\nPostCardMinimal.defaultProps = {\r\n  imageType: 'fluid',\r\n};\r\n\r\nexport default PostCardMinimal;\r\n","import styled from \"styled-components\"\r\n\r\nconst PersonalBlogWrapper = styled.div``\r\n\r\nexport default PersonalBlogWrapper\r\n","import * as React from 'react';\r\nimport {graphql, useStaticQuery} from 'gatsby';\r\nimport PostCardMinimal from '../../../components/post-card-minimal/post-card-minimal';\r\nimport Pagination from '../../../components/pagination/pagination';\r\nimport BlogPostsWrapper, {SecTitle} from './style';\r\n\r\ntype PostsProps = {};\r\n\r\nconst Posts: React.FunctionComponent<PostsProps> = () => {\r\n    const Data = useStaticQuery(graphql`\r\n        query {\r\n            site {\r\n                siteMetadata {\r\n                    title\r\n                }\r\n            }\r\n            allSitePage(filter: { path: { eq: \"/page/1\" } }) {\r\n                nodes {\r\n                    context {\r\n                        numPages\r\n                        currentPage\r\n                    }\r\n                }\r\n            }\r\n            allMarkdownRemark(\r\n                sort: { fields: [frontmatter___date], order: DESC }\r\n                limit: 5\r\n            ) {\r\n                totalCount\r\n                edges {\r\n                    node {\r\n                        excerpt(pruneLength: 300)\r\n                        fields {\r\n                            slug\r\n                        }\r\n                        frontmatter {\r\n                            date(formatString: \"DD [<span>] MMM [</span>]\")\r\n                            title\r\n                            description\r\n                            tags\r\n                            featuredImg {\r\n                                childImageSharp {\r\n                                    fluid(maxWidth: 325, maxHeight: 325, quality: 90) {\r\n                                        ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `);\r\n\r\n    const posts = Data.allMarkdownRemark.edges;\r\n    const TotalPage = Data.allSitePage.nodes[0].context.numPages;\r\n    const CurrentPage = Data.allSitePage.nodes[0].context.currentPage;\r\n\r\n    return (\r\n        <BlogPostsWrapper>\r\n            <SecTitle>Latest Stories</SecTitle>\r\n            {posts.map(({node}: any) => {\r\n                const title = node.frontmatter.title || node.fields.slug;\r\n                return (\r\n                    <PostCardMinimal\r\n                        key={node.fields.slug}\r\n                        title={title}\r\n                        image={\r\n                            node.frontmatter.featuredImg.childImageSharp.fluid\r\n                        }\r\n                        url={node.fields.slug}\r\n                        description={node.frontmatter.description || node.excerpt}\r\n                        date={node.frontmatter.date}\r\n                        tags={node.frontmatter.tags}\r\n                    />\r\n                );\r\n            })}\r\n\r\n            {TotalPage >> 1 ? (\r\n                <Pagination\r\n                    nextLink=\"/page/2\"\r\n                    currentPage={CurrentPage}\r\n                    totalPage={TotalPage}\r\n                />\r\n            ) : (\r\n                ''\r\n            )}\r\n        </BlogPostsWrapper>\r\n    );\r\n};\r\n\r\nexport default Posts;\r\n","import styled from 'styled-components';\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const FeaturedCardWrapper = styled.div`\r\n  position: relative;\r\n\r\n  &:hover {\r\n    .post_details {\r\n      opacity: 1;\r\n      bottom: 30px;\r\n      @media (max-width: 1400px) {\r\n        bottom: 25px;\r\n      }\r\n      @media (max-width: 1024px) {\r\n        bottom: 20px;\r\n      }\r\n      @media (max-width: 990px) {\r\n        bottom: 15px;\r\n      }\r\n    }\r\n  }\r\n\r\n  &.overlay {\r\n    &:hover {\r\n      &:before {\r\n        opacity: 1;\r\n      }\r\n    }\r\n\r\n    &:before {\r\n      content: '';\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n      display: block;\r\n      top: 0;\r\n      left: 0;\r\n      background: linear-gradient(to bottom,\r\n      rgba(112, 112, 112, 0.2) 0%,\r\n      rgba(0, 0, 0, 0.8) 100%);\r\n      z-index: 1;\r\n      pointer-events: none;\r\n      opacity: 0;\r\n      transition: 0.3s ease-in-out;\r\n      @media (max-width: 1024px) {\r\n        opacity: 1;\r\n      }\r\n    }\r\n\r\n    .post_details {\r\n      background: transparent;\r\n      padding: 0;\r\n    }\r\n\r\n    .post_title {\r\n      font-size: 15px;\r\n      font-family: 'Fira Sans', sans-serif;\r\n      line-height: 1.4;\r\n      margin-bottom: 18px;\r\n\r\n      a {\r\n        color: ${themeGet('colors.collectionTitle')};\r\n      }\r\n    }\r\n\r\n    .read_more {\r\n      a {\r\n        color: ${themeGet('colors.collectionLink')};\r\n        text-decoration: none;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PostPreview = styled.div`\r\n  position: relative;\r\n  overflow: hidden;\r\n  img {\r\n    border-radius: 3px;\r\n  }\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const PostDetails = styled.div`\r\n  position: absolute;\r\n  width: calc(100% - 60px);\r\n  bottom: 0;\r\n  left: 30px;\r\n  background-color: #fff;\r\n  padding: 30px;\r\n  border-radius: 3px;\r\n  opacity: 0;\r\n  z-index: 2;\r\n  transition: 0.3s ease-in-out;\r\n  @media (max-width: 1400px) {\r\n    width: calc(100% - 50px);\r\n    left: 25px;\r\n    padding: 25px;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    opacity: 1;\r\n    bottom: 20px;\r\n    width: calc(100% - 40px);\r\n    left: 20px;\r\n    padding: 20px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    opacity: 1;\r\n    bottom: 15px;\r\n    width: calc(100% - 30px);\r\n    left: 15px;\r\n    padding: 20px;\r\n  }\r\n`;\r\n\r\nexport const PostMeta = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nexport const ReadMore = styled.div`\r\n  a {\r\n    font-size: 13px;\r\n    font-weight: 700;\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nexport const PostTitle = styled.h2`\r\n  font-size: 21px;\r\n  font-weight: 700;\r\n  color: ${themeGet('colors.bodyText')};\r\n  margin-bottom: 10px;\r\n  a {\r\n    color: ${themeGet('colors.bodyText')};\r\n  }\r\n  @media (max-width: 1400px) {\r\n    font-size: 18px;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    font-size: 15px;\r\n    margin-bottom: 10px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    font-size: 15px;\r\n    margin-bottom: 10px;\r\n  }\r\n  @media (max-width: 990px) and (min-width: 768px) {\r\n    font-size: 14px;\r\n    max-height: 3em;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const PostTags = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  flex-grow: 1;\r\n\r\n  a {\r\n    display: block;\r\n    margin-right: 20px;\r\n    font-size: 13px;\r\n    font-weight: 400;\r\n    color: ${themeGet('primary', '#797979')};\r\n    @media (max-width: 990px) {\r\n      font-size: 13px;\r\n      margin-right: 15px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Excerpt = styled.p`\r\n  font-size: ${themeGet('fontSizes.3')}px;\r\n  color: ${themeGet('colors.bodyText')};\r\n  font-weight: 400;\r\n  line-height: 2;\r\n  margin-bottom: 30px;\r\n  @media (max-width: 990px) {\r\n    font-size: 14px;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    display: none;\r\n  }\r\n`;\r\n","import * as React from 'react';\r\nimport {Link} from 'gatsby';\r\nimport _ from 'lodash';\r\nimport Img from 'gatsby-image';\r\nimport {\r\n    Excerpt,\r\n    FeaturedCardWrapper,\r\n    PostDetails,\r\n    PostMeta,\r\n    PostPreview,\r\n    PostTags,\r\n    PostTitle,\r\n    ReadMore,\r\n} from './featured-card.style';\r\n\r\ninterface FeaturedCardProps {\r\n    image?: any;\r\n    title: string;\r\n    description?: string;\r\n    url: string;\r\n    tags?: [];\r\n    collection?: string;\r\n    className?: string;\r\n    imageType?: 'fixed' | 'fluid';\r\n    overlay?: boolean;\r\n}\r\n\r\nconst FeaturedCard: React.FunctionComponent<FeaturedCardProps> = (\r\n    {\r\n        image,\r\n        title,\r\n        description,\r\n        url,\r\n        tags,\r\n        collection,\r\n        className,\r\n        imageType,\r\n        overlay,\r\n        ...props\r\n    }\r\n) => {\r\n    const addClass = ['featured_card'];\r\n\r\n    if (overlay == true) {\r\n        addClass.push('overlay');\r\n    }\r\n\r\n    if (className) {\r\n        addClass.push(className);\r\n    }\r\n\r\n    return (\r\n        <FeaturedCardWrapper className={addClass.join(' ')} {...props}>\r\n            {image == null ? null : (\r\n                <PostPreview className=\"post_preview\">\r\n                    <Link to={url}>\r\n                        {imageType === 'fluid' ? (\r\n                            <Img fluid={image} alt=\"post preview\"/>\r\n                        ) : (\r\n                            <Img fixed={image} alt=\"post preview\"/>\r\n                        )}\r\n                    </Link>\r\n                </PostPreview>\r\n            )}\r\n\r\n            <PostDetails className=\"post_details\">\r\n                <PostMeta>\r\n                    {tags == null || overlay == true ? null : (\r\n                        <PostTags className=\"post_tags\">\r\n                            {tags.map((tag: string, index: number) => (\r\n                                <Link key={index} to={`/tags/${_.kebabCase(tag)}/`}>\r\n                                    {`#${tag}`}\r\n                                </Link>\r\n                            ))}\r\n                        </PostTags>\r\n                    )}\r\n                </PostMeta>\r\n\r\n                <PostTitle className=\"post_title\">\r\n                    <Link to={url}>{title}</Link>\r\n                </PostTitle>\r\n                {overlay == true ? (\r\n                    ''\r\n                ) : (\r\n                    <>\r\n                        {' '}\r\n                        {description && (\r\n                            <Excerpt\r\n                                dangerouslySetInnerHTML={{\r\n                                    __html: description,\r\n                                }}\r\n                                className=\"excerpt\"\r\n                            />\r\n                        )}\r\n                    </>\r\n                )}\r\n\r\n                <ReadMore className=\"read_more\">\r\n                    <Link to={url}>{overlay == true ? 'Know more' : 'Read More'}</Link>\r\n                </ReadMore>\r\n            </PostDetails>\r\n        </FeaturedCardWrapper>\r\n    );\r\n};\r\n\r\nFeaturedCard.defaultProps = {\r\n    imageType: 'fluid',\r\n};\r\n\r\nexport default FeaturedCard;\r\n","import styled from 'styled-components';\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const FeaturedPostWrapper = styled.div`\r\n  margin: 0 auto;\r\n  padding: 120px 310px 0 310px;\r\n  position: relative;\r\n\r\n  @media (max-width: 1400px) {\r\n    padding: 80px 35px 0 35px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 70px 25px 0 25px;\r\n  }\r\n`;\r\n\r\nexport const FeaturedPostRow = styled.div`\r\n  margin: 0 -15px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  @media (max-width: 1024px) {\r\n    margin: 0 -10px;\r\n  }\r\n`;\r\n\r\nexport const FeaturedPostCol = styled.div`\r\n  max-width: 16.6666666667%;\r\n  flex: 0 0 16.6666666667%;\r\n  float: left;\r\n  padding: 0 15px;\r\n  @media (max-width: 1024px) {\r\n    padding: 0 10px;\r\n    max-width: 33.3333333%;\r\n    flex: 0 0 33.3333333%;\r\n    margin-bottom: 20px;\r\n  }\r\n  @media (max-width: 767px) {\r\n    max-width: 100%;\r\n    flex: 0 0 100%;\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\n\r\nexport const SecTitle = styled.div`\r\n  color: ${themeGet('colors.sectionTitle')};\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  font-family: ${themeGet('fontFamily.0')};\r\n  letter-spacing: 0.17em;\r\n  position: relative;\r\n  margin-bottom: 30px;\r\n\r\n  &:after {\r\n    content: '';\r\n    width: 68px;\r\n    height: 1px;\r\n    background: ${themeGet('colors.sectionTitle')};\r\n    display: block;\r\n    margin-top: 8px;\r\n  }\r\n`;\r\n","import * as React from 'react';\r\nimport {graphql, useStaticQuery} from 'gatsby';\r\nimport FeaturedCard from '../../../components/featured-card/featured-card';\r\nimport {collectionKnowledge} from '../../../../content/collection/knowledge';\r\nimport {FeaturedPostCol, FeaturedPostRow, FeaturedPostWrapper, SecTitle,} from './style';\r\n\r\ntype FeaturedPostsProps = {};\r\n\r\nconst FeaturedPosts: React.FunctionComponent<FeaturedPostsProps> = () => {\r\n    const Data = useStaticQuery(graphql`\r\n        query {\r\n            site {\r\n                siteMetadata {\r\n                    title\r\n                }\r\n            }\r\n            SSAN1_preview: file(relativePath: { eq: \"SSAN1/preview.jpg\" }) {\r\n                ...ImagePreviewFragment\r\n            }\r\n            SDSP1_preview: file(relativePath: { eq: \"SDSP1/preview.jpg\" }) {\r\n                ...ImagePreviewFragment\r\n            }\r\n        }\r\n    `);\r\n\r\n    const availableCollections = [\"SSAN1\", \"SDSP1\"];\r\n\r\n    const Collections = availableCollections.map(\r\n        code => {\r\n            const collectionInfo = collectionKnowledge[code];\r\n            return {\r\n                preview: Data[`${code}_preview`],\r\n                title: collectionInfo.title,\r\n                shortDescription: collectionInfo.shortDescription,\r\n                url: collectionInfo.url\r\n            }\r\n        }\r\n    );\r\n\r\n    return (\r\n        <FeaturedPostWrapper>\r\n            <SecTitle>Featured Collections</SecTitle>\r\n            <FeaturedPostRow>\r\n                {Collections.map((el: any) => {\r\n                    const title = el.title;\r\n                    return (\r\n                        <FeaturedPostCol key={title}>\r\n                            <FeaturedCard\r\n                                title={title}\r\n                                image={el.preview.childImageSharp.fluid}\r\n                                url={el.url}\r\n                                description={el.shortDescription}\r\n                                overlay={true}\r\n                            />\r\n                        </FeaturedPostCol>\r\n                    );\r\n                })}\r\n            </FeaturedPostRow>\r\n        </FeaturedPostWrapper>\r\n    );\r\n};\r\n\r\nexport default FeaturedPosts;\r\n\r\nexport const imagePreviewFragment = graphql`\r\n    fragment ImagePreviewFragment on File {\r\n        childImageSharp {\r\n            fluid(maxWidth: 270, maxHeight: 405, quality: 100) {\r\n                ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n            }\r\n        }\r\n    }\r\n`\r\n","import styled from 'styled-components';\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const IntroWrapper = styled.div`\r\n  width: 940px;\r\n  max-width: 100%;\r\n  margin: 0 auto;\r\n  padding: 0px 10px 100px 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  @media (max-width: 1400px) {\r\n    padding: 0px 10px 90px 10px;\r\n  }\r\n  @media (max-width: 1200px) {\r\n    padding: 0px 10px 80px 10px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 0px 25px 60px 25px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    display: block;\r\n    padding: 0px 25px 60px 25px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const IntroImage = styled.div`\r\n  width: 270px;\r\n  height: 270px;\r\n  padding: 30px;\r\n  border-radius: 50%;\r\n  margin: 0 auto;\r\n  border: 1px solid ${themeGet('colors.separationBorder')};\r\n  flex-shrink: 0;\r\n  @media (max-width: 990px) {\r\n    width: 220px;\r\n    height: 220px;\r\n    padding: 25px;\r\n    margin-bottom: 25px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    width: 180px;\r\n    height: 180px;\r\n    padding: 20px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  img {\r\n    width: 100%;\r\n    height: auto;\r\n    display: block;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nexport const IntroTitle = styled.h1`\r\n  font-size: 30px;\r\n  font-weight: 400;\r\n  font-family: ${themeGet('fontFamily.1')};\r\n  color: ${themeGet('colors.sectionTitle')};\r\n  margin-bottom: 20px;\r\n  @media (max-width: 990px) {\r\n    font-size: 26px;\r\n    margin-bottom: 15px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    font-size: 22px;\r\n  }\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  color: ${themeGet('colors.bodyText')};\r\n  font-size: ${themeGet('fontSizes.3')}px;\r\n  line-height: ${themeGet('lineHeights.text')};\r\n`;\r\n\r\nexport const ButtonToUrl = styled.p`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const ManifestoWrapper = styled.div`\r\n  position: relative;\r\n  padding: 90px 75px 0 75px;\r\n  @media (max-width: 990px) {\r\n    padding: 80px 45px 30px 45px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 60px 25px 0 25px;\r\n  }\r\n`;\r\n\r\nexport const ManifestoDetails = styled.div`\r\n  width: 1170px;\r\n  max-width: 100%;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  padding: 25px 25px 10px 25px;\r\n\r\n  h2 {\r\n    font-size: 21px;\r\n    font-weight: 500;\r\n    color: ${themeGet('colors.sectionTitle')};\r\n    margin-bottom: 40px;\r\n    @media (max-width: 990px) {\r\n      margin-bottom: 30px;\r\n    }\r\n    @media (max-width: 767px) {\r\n      font-size: 18px;\r\n      margin-bottom: 25px;\r\n    }\r\n  }\r\n\r\n\r\n`;\r\n","import React from 'react';\r\nimport {graphql, useStaticQuery} from 'gatsby';\r\n\r\nimport {ButtonToUrl, Description, IntroTitle, ManifestoDetails, ManifestoWrapper,} from './style';\r\nimport {NextPage} from \"../../components/pagination/pagination.style\";\r\nimport {IoMdArrowRoundForward} from \"react-icons/io\";\r\n\r\ntype IntroProps = {};\r\n\r\nconst Manifesto: React.FunctionComponent<IntroProps> = () => {\r\n    const Data = useStaticQuery(graphql`\r\n        query {\r\n            site {\r\n                siteMetadata {\r\n                    manifestoURL\r\n                }\r\n            }\r\n        }\r\n    `);\r\n\r\n    const {manifestoURL} = Data.site.siteMetadata;\r\n\r\n\r\n    return (\r\n        <ManifestoWrapper>\r\n            <ManifestoDetails>\r\n                <IntroTitle>\r\n                    Read the Lidimist Manifesto\r\n                </IntroTitle>\r\n                <Description>\r\n                    The Manifesto talks about how I think today's art should be and how I think when doing my\r\n                    own art, from literature to tattoos.\r\n                </Description>\r\n                <ButtonToUrl>\r\n                    <NextPage>\r\n                        <a href={manifestoURL} target=\"_blank\">\r\n                            <IoMdArrowRoundForward/>\r\n                        </a>\r\n                    </NextPage>\r\n                </ButtonToUrl>\r\n            </ManifestoDetails>\r\n\r\n        </ManifestoWrapper>\r\n    );\r\n};\r\n\r\nexport default Manifesto;\r\n","import * as React from 'react';\r\nimport PersonalBlogWrapper from './style';\r\nimport Posts from './posts';\r\nimport FeaturedPosts from './featured-post';\r\nimport Manifesto from \"../manifesto\";\r\n\r\ntype PersonalBlogProps = {};\r\n\r\nconst PersonalBlog: React.FunctionComponent<PersonalBlogProps> = (props) => {\r\n    return (\r\n        <PersonalBlogWrapper {...props}>\r\n            <Manifesto/>\r\n            <FeaturedPosts/>\r\n            <Posts/>\r\n        </PersonalBlogWrapper>\r\n    );\r\n};\r\n\r\nexport default PersonalBlog;\r\n","import React from 'react';\r\nimport {graphql, PageProps} from 'gatsby';\r\nimport Layout from '../components/layout';\r\nimport PersonalBlog from '../containers/home';\r\nimport SEO from '../components/seo';\r\n\r\n// Please note that you can use https://github.com/dotansimha/graphql-code-generator\r\n// to generate all types from graphQL schema\r\n\r\ninterface IndexPageProps extends PageProps {\r\n    data: {\r\n        site: {\r\n            siteMetadata: {\r\n                title: string;\r\n                description: string;\r\n            };\r\n        };\r\n    };\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n    query IndexQuery {\r\n        site {\r\n            siteMetadata {\r\n                title\r\n                description\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst IndexPage: React.FC<IndexPageProps> = (props) => {\r\n    const {data} = props;\r\n\r\n    return (\r\n        <Layout>\r\n            <SEO\r\n                title=\"Favarete's Gallery\"\r\n                description={data.site.siteMetadata.description}\r\n            />\r\n            <PersonalBlog/>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default IndexPage;\r\n","import * as React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { IoMdArrowRoundBack, IoMdArrowRoundForward } from 'react-icons/io';\r\nimport {\r\n  PaginationWrapper,\r\n  PrevPage,\r\n  NextPage,\r\n  PageNumber,\r\n} from './pagination.style';\r\n\r\ntype PaginationProps = {\r\n  prevLink?: string | undefined | null | boolean;\r\n  nextLink?: string | undefined | null | boolean;\r\n  currentPage: string;\r\n  totalPage: string;\r\n  className?: string;\r\n};\r\n\r\nconst Pagination: React.FunctionComponent<PaginationProps> = ({\r\n  prevLink,\r\n  nextLink,\r\n  currentPage,\r\n  totalPage,\r\n  className,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <PaginationWrapper {...props} className={className}>\r\n      <PrevPage>\r\n        {prevLink && (\r\n          <Link to={`${prevLink}`} aria-label=\"Prev\">\r\n            <IoMdArrowRoundBack />\r\n          </Link>\r\n        )}\r\n      </PrevPage>\r\n\r\n      <PageNumber>{`Page ${currentPage} Of ${totalPage}`}</PageNumber>\r\n\r\n      <NextPage>\r\n        {nextLink && (\r\n          <Link to={`${nextLink}`} aria-label=\"Next\">\r\n            <IoMdArrowRoundForward />\r\n          </Link>\r\n        )}\r\n      </NextPage>\r\n    </PaginationWrapper>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import styled from 'styled-components';\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const PaginationWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const PrevPage = styled.div`\r\n  min-width: 32px;\r\n  a {\r\n    width: 32px;\r\n    height: 32px;\r\n    background-color: ${themeGet('colors.buttonLinks')};\r\n    color: ${themeGet('colors.buttonLinksText')};\r\n    border-radius: 50%;\r\n    font-size: 18px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: 0.15s ease-in-out;\r\n    svg {\r\n      display: block;\r\n    }\r\n    &:hover {\r\n      background-color: ${themeGet('colors.buttonLinksHover')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NextPage = styled.div`\r\n  min-width: 32px;\r\n  a {\r\n    width: 32px;\r\n    height: 32px;\r\n    background-color: ${themeGet('colors.buttonLinks')};\r\n    color: ${themeGet('colors.buttonLinksText')};\r\n    border-radius: 50%;\r\n    font-size: 18px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: 0.15s ease-in-out;\r\n    svg {\r\n      display: block;\r\n    }\r\n    &:hover {\r\n      background-color: ${themeGet('colors.buttonLinksHover')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PageNumber = styled.div`\r\n  color: ${themeGet('colors.bodyText')};\r\n`;\r\n","interface collectionKnowledgeType {\r\n    [key: string]: {\r\n        title: string,\r\n        shortDescription: string,\r\n        description: string,\r\n        url: string\r\n    };\r\n}\r\n\r\nexport const collectionKnowledge: collectionKnowledgeType = {\r\n    SSAN1: {\r\n        title: \"We are Animals I\",\r\n        shortDescription: \"This is a serie of historical portraits of people that who did something great, \" +\r\n            \"and who somehow were wronged by humanity.\",\r\n        description: \"This is a serie of historical portraits of people that who did something great, \" +\r\n            \"and who somehow were wronged by humanity. Whether by their ideas, whether by their gender, \" +\r\n            \"or by any form of retrograde thinking of their time (that keeps happening until today). These people \" +\r\n            \"contributed to the advancement of humanity and deserve to be remembered. I pictured these people with \" +\r\n            \"horns or tusks, these projection on the head or face of various animals, very close to their brains. \" +\r\n            \"I portrayed them like this to invite anyone looking at these pieces to think about how most of humanity \" +\r\n            \"treats, in the same futile, ignorant and selfish way, animals that do not belong to the human species. \" +\r\n            \"Sentient beings like us, not just pieces of tissue and bones. \" +\r\n            \"I invite everyone to thing about these problems. The only difference is the origin of stupidity, not the \" +\r\n            \"stupidity in itself.\",\r\n        url: \"collection/SSAN1/\"\r\n    },\r\n    SESP1: {\r\n        title: \"Espelhos I\",\r\n        shortDescription: \"Placeholder for the shortDescription\",\r\n        description: \"Placeholder for the description\",\r\n        url: \"collection/SESP1/\"\r\n    },\r\n    SDSP1: {\r\n        title: \"Dispersions I\",\r\n        shortDescription: \"This is a serie of conceptual ideas regarding feelings that are living inside of me.\",\r\n        description: \"This is a serie of conceptual ideas regarding feelings that are living inside of me. Most of the \" +\r\n            \"art I created for this collection was done quickly, like the expressionists did in the past, but my scenes \" +\r\n            \"are interior, they are some pieces of feelings I'm still trying to understand. \\n\" +\r\n            \"I started this series during a long period of depression and anxiety crises, everything got even harder \" +\r\n            \"when the pandemic started and brought years of full isolation. So painting was a form of materializing \" +\r\n            \"everything and releasing the weight from inside my mind.\",\r\n        url: \"collection/SDSP1/\"\r\n    }\r\n}\r\n\r\n\r\n"],"sourceRoot":""}